
# Credos

## Technical
- clean architecture: https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html
    - data
    - business logic
    - interface (api)
    - app
- application logging (e.g. none in diemo)
- python: reorder imports
- separation of concerns
    - functional
    - data
    - caching
- all logic for one service in the same repo
    - zappa
    - http://apex.run/
    - https://github.com/lambci/docker-lambda to test locally
    - serverless
    - aws cdk https://aws.amazon.com/blogs/aws/aws-cloud-development-kit-cdk-typescript-and-python-are-now-generally-available/
- the lower the tech stack, the more general
- contracts
- microservice (-mesh?)
    - 
- no premature optimization, no mixture of architecture and optimization for speed or relability
- public vs. internal apis

- tech-circle:
    - https://realpython.com/python-f-strings/

- rest best practice: 
    - https://hackernoon.com/restful-api-designing-guidelines-the-best-practices-60e1d954e7c9?gi=6a9edea3853d
    - https://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/
    - https://restful-api-design.readthedocs.io/en/latest/methods.html

- Monitoring
- GIND: git is not a database

- donts with diemo
    - upload.geo.admin.ch/.../admin
    - no logging
    - no tests involving db
    - no orm
    - schema validation in dict and not json

### Frontend
- https://www.heise.de/developer/artikel/iframes-der-heilige-Gral-bei-verteilten-Webanwendungen-4496075.html?seite=4


## Team/Organisational
- more IT knowhow (1 more senior IT/cloud position)
- Team-koordinator
- https://agilemanifesto.org/principles.html
- one board with all tickets, two weeks sessions
- clean code
    - https://www.heise.de/developer/artikel/Uncle-Bob-Nichts-geschieht-in-der-heutigen-Gesellschaft-ohne-Software-4442721.html?seite=3
    - https://www.heise.de/developer/artikel/Die-Perversion-agiler-Metaphern-4466436.html

- im moment:
    - angst etwas zu ver√§ndern
    - der Berg ist zu gross, man weiss nicht wo anfangen
    - aktuelle architektur verhindert ausprobieren und lernen

## Organisation
- https://toggl.com/ Time tracking


